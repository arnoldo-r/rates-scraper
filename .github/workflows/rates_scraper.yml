# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron: '*/5 * * * *'
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scrape-and-update"
  scrape-and-update:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: main

    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' 

      # Installs project dependencies from requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Runs the main rates scraper script
      - name: Run currency scraper
        env:
          BCV_URL: ${{ secrets.BCV_URL }}
          LOCAL_TIMEZONE: ${{ secrets.LOCAL_TIMEZONE }}
          BCV_DATE_SELECTOR: ${{ secrets.BCV_DATE_SELECTOR }}
          BCV_USD_SELECTOR: ${{ secrets.BCV_USD_SELECTOR }}
          BCV_EUR_SELECTOR: ${{ secrets.BCV_EUR_SELECTOR }}
        run: python src/main.py
      
      # Configures Git and commits any changes to the data file
      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          git add data/currency_values.json
          git commit -m "automated: update rates values" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
